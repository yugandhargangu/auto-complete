{"version":3,"file":"ngui-auto-complete.js","sources":["../../../projects/auto-complete/src/lib/auto-complete.service.ts","../../../projects/auto-complete/src/lib/auto-complete.component.ts","../../../projects/auto-complete/src/lib/auto-complete.directive.ts","../../../projects/auto-complete/src/lib/auto-complete.module.ts","../../../projects/auto-complete/src/public-api.ts","../../../projects/auto-complete/src/ngui-auto-complete.ts"],"sourcesContent":["import { Injectable, Optional } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NguiAutoComplete {\n\n  public source: string;\n  public pathToData: string;\n  public listFormatter: (arg: any) => string;\n\n  constructor(@Optional() private http: HttpClient) {\n    // ...\n  }\n\n  public filter(list: any[], keyword: string, matchFormatted: boolean, accentInsensitive: boolean) {\n    return accentInsensitive\n      ? list.filter(\n        (el) => {\n          const objStr = matchFormatted ? this.getFormattedListItem(el).toLowerCase() : JSON.stringify(el).toLowerCase();\n          keyword = keyword.toLowerCase();\n\n          return objStr.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '')\n            .indexOf(keyword.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '')) !== -1;\n        })\n      : list.filter(\n        (el) => {\n          const objStr = matchFormatted ? this.getFormattedListItem(el).toLowerCase() : JSON.stringify(el).toLowerCase();\n          keyword = keyword.toLowerCase();\n\n          return objStr.indexOf(keyword) !== -1;\n        }\n      );\n  }\n\n  public getFormattedListItem(data: any) {\n    let formatted;\n    const formatter = this.listFormatter || '(id) value';\n    if (typeof formatter === 'function') {\n      formatted = formatter.apply(this, [data]);\n    } else if (typeof data !== 'object') {\n      formatted = data;\n    } else if (typeof formatter === 'string') {\n      formatted = formatter;\n      const matches = formatter.match(/[a-zA-Z0-9_\\$]+/g);\n      if (matches && typeof data !== 'string') {\n        matches.forEach((key) => {\n          formatted = formatted.replace(key, data[key]);\n        });\n      }\n    }\n    return formatted;\n  }\n\n  /**\n   * return remote data from the given source and options, and data path\n   */\n  public getRemoteData(keyword: string): Observable<any[]> {\n    if (typeof this.source !== 'string') {\n      throw new TypeError('Invalid type of source, must be a string. e.g. http://www.google.com?q=:my_keyword');\n    } else if (!this.http) {\n      throw new Error('Http is required.');\n    }\n\n    const matches = this.source.match(/:[a-zA-Z_]+/);\n    if (matches === null) {\n      throw new Error('Replacement word is missing.');\n    }\n\n    const replacementWord = matches[0];\n    const url = this.source.replace(replacementWord, keyword);\n\n    return this.http.get<any[]>(url)\n      .pipe(\n        map((list) => {\n\n          if (this.pathToData) {\n            const paths = this.pathToData.split('.');\n            paths.forEach((prop) => list = list[prop]);\n          }\n\n          return list;\n        })\n      );\n  }\n}\n","import { Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { NguiAutoComplete } from './auto-complete.service';\n\n@Component({\n  selector: 'ngui-auto-complete',\n  template: `\n    <div #autoCompleteContainer class=\"ngui-auto-complete\">\n      <!-- keyword input -->\n      <input *ngIf=\"showInputTag\"\n             #autoCompleteInput class=\"keyword\"\n             [attr.autocomplete]=\"autocomplete ? 'null' : 'off'\"\n             placeholder=\"{{placeholder}}\"\n             (focus)=\"showDropdownList($event)\"\n             (blur)=\"blurHandler($event)\"\n             (keydown)=\"inputElKeyHandler($event)\"\n             (input)=\"reloadListInDelay($event)\"\n             [(ngModel)]=\"keyword\"/>\n\n      <!-- dropdown that user can select -->\n      <ul *ngIf=\"dropdownVisible\" [class.empty]=\"emptyList\">\n        <li *ngIf=\"isLoading && loadingTemplate\" class=\"loading\"\n            [innerHTML]=\"loadingTemplate\"></li>\n        <li *ngIf=\"isLoading && !loadingTemplate\" class=\"loading\">{{loadingText}}</li>\n        <li *ngIf=\"minCharsEntered && !isLoading && !filteredList.length\"\n            (mousedown)=\"selectOne('')\"\n            class=\"no-match-found\">{{noMatchFoundText || 'No Result Found'}}\n        </li>\n        <li *ngIf=\"headerItemTemplate && filteredList.length\" class=\"header-item\"\n            [innerHTML]=\"headerItemTemplate\"></li>\n        <li *ngIf=\"blankOptionText && filteredList.length\"\n            (mousedown)=\"selectOne('')\"\n            class=\"blank-item\">{{blankOptionText}}\n        </li>\n        <li class=\"item\"\n            *ngFor=\"let item of filteredList; let i=index; trackBy: trackByIndex\"\n            (mousedown)=\"selectOne(item)\"\n            [ngClass]=\"{selected: i === itemIndex}\"\n            [innerHtml]=\"autoComplete.getFormattedListItem(item)\">\n        </li>\n      </ul>\n\n    </div>\n  `,\n  styles: [`\n    @keyframes slideDown {\n      0% {\n        transform: translateY(-10px);\n      }\n      100% {\n        transform: translateY(0px);\n      }\n    }\n\n    .ngui-auto-complete {\n      background-color: transparent;\n    }\n\n    .ngui-auto-complete > input {\n      outline: none;\n      border: 0;\n      padding: 2px;\n      box-sizing: border-box;\n      background-clip: content-box;\n    }\n\n    .ngui-auto-complete > ul {\n      background-color: #fff;\n      margin: 0;\n      width: 100%;\n      overflow-y: auto;\n      list-style-type: none;\n      padding: 0;\n      border: 1px solid #ccc;\n      box-sizing: border-box;\n      animation: slideDown 0.1s;\n    }\n\n    .ngui-auto-complete > ul.empty {\n      display: none;\n    }\n\n    .ngui-auto-complete > ul li {\n      padding: 2px 5px;\n      border-bottom: 1px solid #eee;\n    }\n\n    .ngui-auto-complete > ul li.selected {\n      background-color: #ccc;\n    }\n\n    .ngui-auto-complete > ul li:last-child {\n      border-bottom: none;\n    }\n\n    .ngui-auto-complete > ul li:not(.header-item):hover {\n      background-color: #ccc;\n    }`\n  ],\n  encapsulation: ViewEncapsulation.None\n})\nexport class NguiAutoCompleteComponent implements OnInit {\n\n  /**\n   * public input properties\n   */\n  @Input('autocomplete') public autocomplete = false;\n  @Input('list-formatter') public listFormatter: (arg: any) => string;\n  @Input('source') public source: any;\n  @Input('path-to-data') public pathToData: string;\n  @Input('min-chars') public minChars = 0;\n  @Input('placeholder') public placeholder: string;\n  @Input('blank-option-text') public blankOptionText: string;\n  @Input('no-match-found-text') public noMatchFoundText: string;\n  @Input('accept-user-input') public acceptUserInput = true;\n  @Input('loading-text') public loadingText = 'Loading';\n  @Input('loading-template') public loadingTemplate = null;\n  @Input('max-num-list') public maxNumList: number;\n  @Input('show-input-tag') public showInputTag = true;\n  @Input('show-dropdown-on-init') public showDropdownOnInit = false;\n  @Input('tab-to-select') public tabToSelect = true;\n  @Input('match-formatted') public matchFormatted = false;\n  @Input('auto-select-first-item') public autoSelectFirstItem = false;\n  @Input('select-on-blur') public selectOnBlur = false;\n  @Input('re-focus-after-select') public reFocusAfterSelect = true;\n  @Input('header-item-template') public headerItemTemplate = null;\n  @Input('ignore-accents') public ignoreAccents = true;\n\n  @Output() public valueSelected = new EventEmitter();\n  @Output() public customSelected = new EventEmitter();\n  @Output() public textEntered = new EventEmitter();\n\n  @ViewChild('autoCompleteInput') public autoCompleteInput: ElementRef;\n  @ViewChild('autoCompleteContainer') public autoCompleteContainer: ElementRef;\n\n  public dropdownVisible = false;\n  public isLoading = false;\n\n  public filteredList: any[] = [];\n  public minCharsEntered = false;\n  public itemIndex: number = null;\n  public keyword: string;\n\n  private el: HTMLElement;           // this component  element `<ngui-auto-complete>`\n  private timer = 0;\n\n  private delay = (() => {\n    let timer = null;\n    return (callback: any, ms: number) => {\n      clearTimeout(timer);\n      timer = setTimeout(callback, ms);\n    };\n  })();\n  private selectOnEnter = false;\n\n  /**\n   * constructor\n   */\n  constructor(elementRef: ElementRef, public autoComplete: NguiAutoComplete) {\n    this.el = elementRef.nativeElement;\n  }\n\n  /**\n   * user enters into input el, shows list to select, then select one\n   */\n  ngOnInit(): void {\n    this.autoComplete.source = this.source;\n    this.autoComplete.pathToData = this.pathToData;\n    this.autoComplete.listFormatter = this.listFormatter;\n    if (this.autoSelectFirstItem) {\n      this.itemIndex = 0;\n    }\n    setTimeout(() => {\n      if (this.autoCompleteInput && this.reFocusAfterSelect) {\n        this.autoCompleteInput.nativeElement.focus();\n      }\n      if (this.showDropdownOnInit) {\n        this.showDropdownList({target: {value: ''}});\n      }\n    });\n  }\n\n  public isSrcArr(): boolean {\n    return Array.isArray(this.source);\n  }\n\n  public reloadListInDelay = (evt: any): void => {\n    const delayMs = this.isSrcArr() ? 10 : 500;\n    const keyword = evt.target.value;\n\n    // executing after user stopped typing\n    this.delay(() => this.reloadList(keyword), delayMs);\n  }\n\n  public showDropdownList(event: any): void {\n    this.dropdownVisible = true;\n    this.reloadList(event.target.value);\n  }\n\n  public hideDropdownList(): void {\n    this.selectOnEnter = false;\n    this.dropdownVisible = false;\n  }\n\n  public findItemFromSelectValue(selectText: string): any {\n    const matchingItems = this.filteredList.filter((item) => ('' + item) === selectText);\n    return matchingItems.length ? matchingItems[0] : null;\n  }\n\n  public reloadList(keyword: string): void {\n\n    this.filteredList = [];\n    if (keyword.length < (this.minChars || 0)) {\n      this.minCharsEntered = false;\n      return;\n    } else {\n      this.minCharsEntered = true;\n    }\n\n    if (this.isSrcArr()) {    // local source\n      this.isLoading = false;\n      this.filteredList = this.autoComplete.filter(this.source, keyword, this.matchFormatted, this.ignoreAccents);\n      if (this.maxNumList) {\n        this.filteredList = this.filteredList.slice(0, this.maxNumList);\n      }\n\n    } else {                 // remote source\n      this.isLoading = true;\n\n      if (typeof this.source === 'function') {\n        // custom function that returns observable\n        this.source(keyword).subscribe(\n          (resp) => {\n\n            if (this.pathToData) {\n              const paths = this.pathToData.split('.');\n              paths.forEach((prop) => resp = resp[prop]);\n            }\n\n            this.filteredList = resp;\n            if (this.maxNumList) {\n              this.filteredList = this.filteredList.slice(0, this.maxNumList);\n            }\n          },\n          (error) => null,\n          () => this.isLoading = false // complete\n        );\n      } else {\n        // remote source\n\n        this.autoComplete.getRemoteData(keyword).subscribe((resp) => {\n            this.filteredList = resp ? resp : [];\n            if (this.maxNumList) {\n              this.filteredList = this.filteredList.slice(0, this.maxNumList);\n            }\n          },\n          (error) => null,\n          () => this.isLoading = false // complete\n        );\n      }\n    }\n  }\n\n  public selectOne(data: any) {\n    if (!!data || data === '') {\n      this.valueSelected.emit(data);\n    } else {\n      this.customSelected.emit(this.keyword);\n    }\n  }\n\n  public enterText(data: any) {\n    this.textEntered.emit(data);\n  }\n\n  public blurHandler(evt: any) {\n    if (this.selectOnBlur) {\n      this.selectOne(this.filteredList[this.itemIndex]);\n    }\n\n    this.hideDropdownList();\n  }\n\n  public inputElKeyHandler = (evt: any) => {\n    const totalNumItem = this.filteredList.length;\n\n    if (!this.selectOnEnter && this.autoSelectFirstItem && (0 !== totalNumItem)) {\n      this.selectOnEnter = true;\n    }\n\n    switch (evt.keyCode) {\n      case 27: // ESC, hide auto complete\n        this.selectOnEnter = false;\n        this.selectOne(undefined);\n        break;\n\n      case 38: // UP, select the previous li el\n        if (0 === totalNumItem) {\n          return;\n        }\n        this.selectOnEnter = true;\n        this.itemIndex = (totalNumItem + this.itemIndex - 1) % totalNumItem;\n        this.scrollToView(this.itemIndex);\n        break;\n\n      case 40: // DOWN, select the next li el or the first one\n        if (0 === totalNumItem) {\n          return;\n        }\n        this.selectOnEnter = true;\n        this.dropdownVisible = true;\n        let sum = this.itemIndex;\n        sum = (this.itemIndex === null) ? 0 : sum + 1;\n        this.itemIndex = (totalNumItem + sum) % totalNumItem;\n        this.scrollToView(this.itemIndex);\n        break;\n\n      case 13: // ENTER, choose it!!\n        if (this.selectOnEnter) {\n          this.selectOne(this.filteredList[this.itemIndex]);\n        }\n        evt.preventDefault();\n        break;\n\n      case 9: // TAB, choose if tab-to-select is enabled\n        if (this.tabToSelect) {\n          this.selectOne(this.filteredList[this.itemIndex]);\n        }\n        break;\n    }\n  }\n\n  public scrollToView(index) {\n    const container = this.autoCompleteContainer.nativeElement;\n    const ul = container.querySelector('ul');\n    const li = ul.querySelector('li');  // just sample the first li to get height\n    const liHeight = li.offsetHeight;\n    const scrollTop = ul.scrollTop;\n    const viewport = scrollTop + ul.offsetHeight;\n    const scrollOffset = liHeight * index;\n    if (scrollOffset < scrollTop || (scrollOffset + liHeight) > viewport) {\n      ul.scrollTop = scrollOffset;\n    }\n  }\n\n  public trackByIndex(index, item) {\n    return index;\n  }\n\n  get emptyList(): boolean {\n    return !(\n      this.isLoading ||\n      (this.minCharsEntered && !this.isLoading && !this.filteredList.length) ||\n      (this.filteredList.length)\n    );\n  }\n\n}\n","import {\n  AfterViewInit, ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  EventEmitter, Host,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit, Optional,\n  Output, SimpleChanges, SkipSelf, ViewContainerRef\n} from '@angular/core';\nimport { AbstractControl, ControlContainer, FormControl, FormGroup, FormGroupName } from '@angular/forms';\nimport { NguiAutoCompleteComponent } from './auto-complete.component';\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: '[auto-complete], [ngui-auto-complete]'\n})\nexport class NguiAutoCompleteDirective implements OnInit, OnChanges, AfterViewInit, OnDestroy {\n\n  @Input('autocomplete') public autocomplete = false;\n  @Input('auto-complete-placeholder') public autoCompletePlaceholder: string;\n  @Input('source') public source: any;\n  @Input('path-to-data') public pathToData: string;\n  @Input('min-chars') public minChars: number;\n  @Input('display-property-name') public displayPropertyName: string;\n  @Input('accept-user-input') public acceptUserInput = true;\n  @Input('max-num-list') public maxNumList: string;\n  @Input('select-value-of') public selectValueOf: string;\n  @Input('loading-template') public loadingTemplate = null;\n  @Input('list-formatter') public listFormatter;\n  @Input('loading-text') public loadingText = 'Loading';\n  @Input('blank-option-text') public blankOptionText: string;\n  @Input('no-match-found-text') public noMatchFoundText: string;\n  @Input('value-formatter') public valueFormatter: any;\n  @Input('tab-to-select') public tabToSelect = true;\n  @Input('select-on-blur') public selectOnBlur = false;\n  @Input('match-formatted') public matchFormatted = false;\n  @Input('auto-select-first-item') public autoSelectFirstItem = false;\n  @Input('open-on-focus') public openOnFocus = true;\n  @Input('close-on-focusout') public closeOnFocusOut = true;\n  @Input('re-focus-after-select') public reFocusAfterSelect = true;\n  @Input('header-item-template') public headerItemTemplate = null;\n  @Input('ignore-accents') public ignoreAccents = true;\n\n  @Input() public ngModel: string;\n  @Input('formControlName') public formControlName: string;\n  // if [formControl] is used on the anchor where our directive is sitting\n  // a form is not necessary to use a formControl we should also support this\n  @Input('formControl') public extFormControl: FormControl;\n  @Input('z-index') public zIndex = '1';\n  @Input('is-rtl') public isRtl = false;\n\n  @Output() public ngModelChange = new EventEmitter();\n  @Output() public valueChanged = new EventEmitter();\n  @Output() public customSelected = new EventEmitter();\n\n  private componentRef: ComponentRef<NguiAutoCompleteComponent>;\n  private wrapperEl: HTMLElement;\n  private el: HTMLElement;   // this element element, can be any\n  private acDropdownEl: HTMLElement; // auto complete element\n  private inputEl: HTMLInputElement;  // input element of this element\n  private formControl: AbstractControl;\n  private revertValue: any;\n  private dropdownJustHidden: boolean;\n  private scheduledBlurHandler: any;\n  private documentClickListener: (e: MouseEvent) => any;\n\n  constructor(private resolver: ComponentFactoryResolver,\n              public  viewContainerRef: ViewContainerRef,\n              @Optional() @Host() @SkipSelf() private parentForm: ControlContainer) {\n    this.el = this.viewContainerRef.element.nativeElement;\n  }\n\n  ngOnInit(): void {\n    // Blur event is handled only after a click event.\n    // This is to prevent handling of blur events resulting from interacting with a scrollbar\n    // introduced by content overflow (Internet explorer issue).\n    // See issue description here: http://stackoverflow.com/questions/2023779/clicking-on-a-divs-scroll-bar-fires-the-blur-event-in-ie\n    this.documentClickListener = (e) => {\n      if (this.scheduledBlurHandler) {\n        this.scheduledBlurHandler();\n        this.scheduledBlurHandler = null;\n      }\n    };\n\n    document.addEventListener('click', this.documentClickListener);\n    // wrap this element with <div class=\"ngui-auto-complete\">\n    this.wrapperEl = document.createElement('div');\n    this.wrapperEl.className = 'ngui-auto-complete-wrapper';\n    this.wrapperEl.style.position = 'relative';\n    this.el.parentElement.insertBefore(this.wrapperEl, this.el.nextSibling);\n    this.wrapperEl.appendChild(this.el);\n\n    // Check if we were supplied with a [formControlName] and it is inside a [form]\n    // else check if we are supplied with a [FormControl] regardless if it is inside a [form] tag\n    if (this.parentForm && this.formControlName) {\n      if (this.parentForm['form']) {\n        this.formControl = (this.parentForm['form'] as FormGroup).get(this.formControlName);\n      } else if (this.parentForm instanceof FormGroupName) {\n        this.formControl = (this.parentForm as FormGroupName).control.controls[this.formControlName];\n      }\n    } else if (this.extFormControl) {\n      this.formControl = this.extFormControl;\n    }\n\n    // apply toString() method for the object\n    if (!!this.ngModel) {\n      this.selectNewValue(this.ngModel);\n    } else if (!!this.formControl && this.formControl.value) {\n      this.selectNewValue(this.formControl.value);\n    }\n\n  }\n\n  ngAfterViewInit() {\n    // if this element is not an input tag, move dropdown after input tag\n    // so that it displays correctly\n    this.inputEl = this.el.tagName === 'INPUT' ? this.el as HTMLInputElement : this.el.querySelector('input');\n\n    if (this.openOnFocus) {\n      this.inputEl.addEventListener('focus', (e) => this.showAutoCompleteDropdown(e));\n    }\n\n    if (this.closeOnFocusOut) {\n      this.inputEl.addEventListener('focusout', (e) => this.hideAutoCompleteDropdown(e));\n    }\n\n    if (!this.autocomplete) {\n      this.inputEl.setAttribute('autocomplete', 'off');\n    }\n    this.inputEl.addEventListener('blur', (e) => {\n      this.scheduledBlurHandler = () => {\n        return this.blurHandler(e);\n      };\n    });\n    this.inputEl.addEventListener('keydown', (e) => this.keydownEventHandler(e));\n    this.inputEl.addEventListener('input', (e) => this.inputEventHandler(e));\n  }\n\n  ngOnDestroy(): void {\n    if (this.componentRef) {\n      this.componentRef.instance.valueSelected.unsubscribe();\n      this.componentRef.instance.textEntered.unsubscribe();\n    }\n    if (this.documentClickListener) {\n      document.removeEventListener('click', this.documentClickListener);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['ngModel']) {\n      this.ngModel = this.setToStringFunction(changes['ngModel'].currentValue);\n      this.renderValue(this.ngModel);\n    }\n  }\n\n  // show auto-complete list below the current element\n  public showAutoCompleteDropdown = (event?: any): void => {\n    if (this.dropdownJustHidden) {\n      return;\n    }\n    this.hideAutoCompleteDropdown();\n    this.scheduledBlurHandler = null;\n\n    const factory = this.resolver.resolveComponentFactory(NguiAutoCompleteComponent);\n\n    this.componentRef = this.viewContainerRef.createComponent(factory);\n\n    const component = this.componentRef.instance;\n    component.keyword = this.inputEl.value;\n    component.showInputTag = false; // Do NOT display autocomplete input tag separately\n\n    component.pathToData = this.pathToData;\n    component.minChars = this.minChars;\n    component.source = this.source;\n    component.placeholder = this.autoCompletePlaceholder;\n    component.acceptUserInput = this.acceptUserInput;\n    component.maxNumList = parseInt(this.maxNumList, 10);\n\n    component.loadingText = this.loadingText;\n    component.loadingTemplate = this.loadingTemplate;\n    component.listFormatter = this.listFormatter;\n    component.blankOptionText = this.blankOptionText;\n    component.noMatchFoundText = this.noMatchFoundText;\n    component.tabToSelect = this.tabToSelect;\n    component.selectOnBlur = this.selectOnBlur;\n    component.matchFormatted = this.matchFormatted;\n    component.autoSelectFirstItem = this.autoSelectFirstItem;\n    component.headerItemTemplate = this.headerItemTemplate;\n    component.ignoreAccents = this.ignoreAccents;\n\n    component.valueSelected.subscribe(this.selectNewValue);\n    component.textEntered.subscribe(this.enterNewText);\n    component.customSelected.subscribe(this.selectCustomValue);\n\n    this.acDropdownEl = this.componentRef.location.nativeElement;\n    this.acDropdownEl.style.display = 'none';\n\n    // if this element is not an input tag, move dropdown after input tag\n    // so that it displays correctly\n\n    // TODO: confirm with owners\n    // with some reason, viewContainerRef.createComponent is creating element\n    // to parent div which is created by us on ngOnInit, please try this with demo\n\n    // if (this.el.tagName !== 'INPUT' && this.acDropdownEl) {\n    this.inputEl.parentElement.insertBefore(this.acDropdownEl, this.inputEl.nextSibling);\n    // }\n    this.revertValue = typeof this.ngModel !== 'undefined' ? this.ngModel : this.inputEl.value;\n\n    setTimeout(() => {\n      component.reloadList(this.inputEl.value);\n      this.styleAutoCompleteDropdown();\n      component.dropdownVisible = true;\n    });\n  }\n\n  public blurHandler(event: any) {\n    if (this.componentRef) {\n      const component = this.componentRef.instance;\n\n      if (this.selectOnBlur) {\n        component.selectOne(component.filteredList[component.itemIndex]);\n      }\n\n      if (this.closeOnFocusOut) {\n        this.hideAutoCompleteDropdown(event);\n      }\n    }\n  }\n\n  public hideAutoCompleteDropdown = (event?: any): void => {\n    if (this.componentRef) {\n      let currentItem: any;\n      const hasRevertValue = (typeof this.revertValue !== 'undefined');\n      if (this.inputEl && hasRevertValue && this.acceptUserInput === false) {\n        currentItem = this.componentRef.instance.findItemFromSelectValue(this.inputEl.value);\n      }\n      this.componentRef.destroy();\n      this.componentRef = undefined;\n\n      if (this.inputEl && hasRevertValue && this.acceptUserInput === false && currentItem === null) {\n        this.selectNewValue(this.revertValue);\n      } else if (this.inputEl && this.acceptUserInput === true && typeof currentItem === 'undefined' && event && event.target.value) {\n        this.enterNewText(event.target.value);\n      }\n    }\n    this.dropdownJustHidden = true;\n    setTimeout(() => this.dropdownJustHidden = false, 100);\n  }\n\n  public styleAutoCompleteDropdown = () => {\n    if (this.componentRef) {\n      const component = this.componentRef.instance;\n\n      /* setting width/height auto complete */\n      const thisElBCR = this.el.getBoundingClientRect();\n      const thisInputElBCR = this.inputEl.getBoundingClientRect();\n      const closeToBottom = thisInputElBCR.bottom + 100 > window.innerHeight;\n      const directionOfStyle = this.isRtl ? 'right' : 'left';\n\n      this.acDropdownEl.style.width = thisInputElBCR.width + 'px';\n      this.acDropdownEl.style.position = 'absolute';\n      this.acDropdownEl.style.zIndex = this.zIndex;\n      this.acDropdownEl.style[directionOfStyle] = '0';\n      this.acDropdownEl.style.display = 'inline-block';\n\n      if (closeToBottom) {\n        this.acDropdownEl.style.bottom = `${thisInputElBCR.height}px`;\n      } else {\n        this.acDropdownEl.style.top = `${thisInputElBCR.height}px`;\n      }\n    }\n  }\n\n  public setToStringFunction(item: any): any {\n    if (item && typeof item === 'object') {\n      let displayVal;\n\n      if (typeof this.valueFormatter === 'string') {\n        const matches = this.valueFormatter.match(/[a-zA-Z0-9_\\$]+/g);\n        let formatted = this.valueFormatter;\n        if (matches && typeof item !== 'string') {\n          matches.forEach((key) => {\n            formatted = formatted.replace(key, item[key]);\n          });\n        }\n        displayVal = formatted;\n      } else if (typeof this.valueFormatter === 'function') {\n        displayVal = this.valueFormatter(item);\n      } else if (this.displayPropertyName) {\n        displayVal = item[this.displayPropertyName];\n      } else if (typeof this.listFormatter === 'string' && this.listFormatter.match(/^\\w+$/)) {\n        displayVal = item[this.listFormatter];\n      } else {\n        displayVal = item.value;\n      }\n      item.toString = () => displayVal;\n    }\n    return item;\n  }\n\n  public selectNewValue = (item: any) => {\n    // make displayable value\n    if (item && typeof item === 'object') {\n      item = this.setToStringFunction(item);\n    }\n\n    this.renderValue(item);\n\n    // make return value\n    let val = item;\n    if (this.selectValueOf && item[this.selectValueOf]) {\n      val = item[this.selectValueOf];\n    }\n    if ((this.parentForm && this.formControlName) || this.extFormControl) {\n      if (!!val) {\n        this.formControl.patchValue(val);\n      }\n    }\n    if (val !== this.ngModel) {\n      this.ngModelChange.emit(val);\n    }\n    this.valueChanged.emit(val);\n    this.hideAutoCompleteDropdown();\n    setTimeout(() => {\n      if (this.reFocusAfterSelect) {\n        this.inputEl.focus();\n      }\n\n      return this.inputEl;\n    });\n  }\n\n  public selectCustomValue = (text: string) => {\n    this.customSelected.emit(text);\n    this.hideAutoCompleteDropdown();\n    setTimeout(() => {\n      if (this.reFocusAfterSelect) {\n        this.inputEl.focus();\n      }\n\n      return this.inputEl;\n    });\n  }\n\n  public enterNewText = (value: any) => {\n    this.renderValue(value);\n    this.ngModelChange.emit(value);\n    this.valueChanged.emit(value);\n    this.hideAutoCompleteDropdown();\n  }\n\n  private keydownEventHandler = (evt: any) => {\n    if (this.componentRef) {\n      const component = this.componentRef.instance;\n      component.inputElKeyHandler(evt);\n    }\n  }\n\n  private inputEventHandler = (evt: any) => {\n    if (this.componentRef) {\n      const component = this.componentRef.instance;\n      component.dropdownVisible = true;\n      component.keyword = evt.target.value;\n      component.reloadListInDelay(evt);\n    } else {\n      this.showAutoCompleteDropdown();\n    }\n  }\n\n  private renderValue(item: any) {\n    if (!!this.inputEl) {\n      this.inputEl.value = '' + item;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NguiAutoCompleteComponent } from './auto-complete.component';\nimport { NguiAutoCompleteDirective } from './auto-complete.directive';\n\n@NgModule({\n  declarations: [\n    NguiAutoCompleteComponent,\n    NguiAutoCompleteDirective\n  ],\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  exports: [\n    NguiAutoCompleteComponent,\n    NguiAutoCompleteDirective\n  ]\n})\nexport class NguiAutoCompleteModule { }\n","/*\n * Public API Surface of auto-complete\n */\n\nexport * from './lib/auto-complete.service';\nexport * from './lib/auto-complete.component';\nexport * from './lib/auto-complete.directive';\nexport * from './lib/auto-complete.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}